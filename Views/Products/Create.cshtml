@model MvcECommerce.Entities.Product

@{
    ViewBag.Title = "Create Product";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    /* Sadece önemli CSS kısmı bırakıldı */
    .form-container {
        background: white;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        padding: 40px;
        margin: 20px auto;
        max-width: 800px;
    }

    .form-header {
        text-align: center;
        margin-bottom: 40px;
    }

        .form-header h2 {
            color: #2c3e50;
            font-weight: 300;
            font-size: 2.5rem;
        }

    .form-group {
        margin-bottom: 30px;
    }

    .control-label {
        color: #2c3e50;
        font-weight: 500;
        margin-bottom: 8px;
        display: block;
    }

    .form-control, .form-select {
        border: 2px solid #e9ecef;
        border-radius: 12px;
        padding: 15px 20px;
        font-size: 16px;
        background: #fafbfc;
        width: 100%;
    }

        .form-control:focus, .form-select:focus {
            border-color: #4a90e2;
            box-shadow: 0 0 0 3px rgba(74,144,226,0.1);
            background: white;
            outline: none;
        }

    .btn-default {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 12px;
        padding: 15px 40px;
        border: none;
    }

    .back-link {
        background: transparent;
        border: 2px solid #e9ecef;
        border-radius: 12px;
        padding: 15px 30px;
        color: #2c3e50;
        font-weight: 500;
        text-decoration: none;
    }

        .back-link:hover {
            border-color: #4a90e2;
            color: #4a90e2;
            text-decoration: none;
        }
</style>

<div class="form-container fade-in">
    <div class="form-header">
        <h2>Create Product</h2>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter product name" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter product description" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Image, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Image, new { @class = "form-control", placeholder = "Enter image URL" })
                @Html.ValidationMessageFor(m => m.Image, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Price, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control", placeholder = "0.00" })
                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Stock, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Stock, new { @class = "form-control", placeholder = "0" })
                @Html.ValidationMessageFor(m => m.Stock, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.IsApproved, new { @class = "control-label" })
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.IsApproved)
                    @Html.LabelFor(m => m.IsApproved, "Approved")
                </div>
                @Html.ValidationMessageFor(m => m.IsApproved, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.IsHome, new { @class = "control-label" })
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.IsHome)
                    @Html.LabelFor(m => m.IsHome, "Show on Homepage")
                </div>
                @Html.ValidationMessageFor(m => m.IsHome, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CategoryId, "Category", new { @class = "control-label" })
                @Html.DropDownListFor(
                    m => m.CategoryId,
                    (SelectList)ViewBag.CategoryId,
                    "Select Category",
                    new { @class = "form-select", @id = "categoryDropdown" }
                )
                @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="submit" value="Create Product" class="btn btn-default" />
            </div>
        </div>
    }
    <div class="form-actions">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "back-link" })
    </div>
</div>
